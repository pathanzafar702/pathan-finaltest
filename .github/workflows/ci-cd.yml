name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    # Checkout code
    - name: Checkout
      uses: actions/checkout@v4

    # Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    # Log in to AWS ECR
    - name: Log in to AWS ECR
      uses: aws-actions/amazon-ecr-login@v2
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ca-central-1

    # Build and push Docker image
    - name: Build and push Docker image
      env:
        ECR_REGISTRY: 664418999049.dkr.ecr.ca-central-1.amazonaws.com/pathan-final-api
        ECR_REPOSITORY: pathan-final-api
        IMAGE_TAG: latest
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # Create ECS service if not exists
    - name: Create ECS service if not exists
      run: |
        # Check if the service exists
        SERVICE_EXISTS=$(aws ecs describe-services --cluster pathan-cluster --services pathan-final-service --region ca-central-1 --query 'services[0].status' --output text 2>/dev/null || echo "NOT_FOUND")
        if [ "$SERVICE_EXISTS" != "ACTIVE" ]; then
          echo "Service pathan-final-service does not exist, creating it..."
          aws ecs create-service \
            --cluster pathan-cluster \
            --service-name pathan-final-service \
            --task-definition pathan-task \
            --desired-count 2 \
            --launch-type FARGATE \
            --network-configuration "awsvpcConfiguration={subnets=[subnet-08d6326d6926f6872,subnet-0b47b5dda80581e0d],securityGroups=[sg-0d1f474fde0e6943b],assignPublicIp=DISABLED}" \
            --load-balancers "arn:aws:elasticloadbalancing:ca-central-1:975050105141:targetgroup/pathan-pathan-HKHUEJERQTPF/a40ac65b288ab022,containerName=pathan-container,containerPort=5000" \
            --region ca-central-1
        else
          echo "Service pathan-final-service already exists, proceeding with deployment..."
        fi
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ca-central-1

    # Deploy to ECS
    - name: Deploy to ECS
      uses: aws-actions/amazon-ecs-deploy-task-definition@v2
      with:
        task-definition: task-definition.json
        service: pathan-final-service
        cluster: pathan-cluster
        wait-for-service-stability: true
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ca-central-1
